# Generated by Django 3.2.7 on 2021-10-18 13:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Clients', '0008_auto_20211012_0952'),
        ('Organizations', '0005_auto_20211012_0952'),
        ('Handbook', '0006_alter_actionhistory_model'),
        ('Orders', '0009_auto_20211017_1326'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cashbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated_at')),
                ('data', models.JSONField(blank=True, null=True)),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('cash', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Cash')),
                ('account_money', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Account money')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_cashbox', to='Organizations.organization', verbose_name='Organization')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_cashbox', to='Organizations.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Cashbox',
                'verbose_name_plural': 'Cashboxes',
                'db_table': 'Cashbox',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated_at')),
                ('data', models.JSONField(blank=True, null=True)),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('code', models.CharField(max_length=150, null=True, verbose_name='Code')),
                ('barcode', models.CharField(max_length=150, null=True, verbose_name='Barcode')),
                ('purchase_price', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Purchase price')),
                ('sale_price', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Sale price')),
                ('count', models.IntegerField(default=0, verbose_name='Quantity')),
                ('supplier', models.CharField(max_length=150, verbose_name='Supplier')),
                ('irreducible_balance', models.FloatField(null=True, verbose_name='Irreducible balance')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'Product',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated_at')),
                ('data', models.JSONField(blank=True, null=True)),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'Category',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated_at')),
                ('data', models.JSONField(blank=True, null=True)),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Price')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_product_order', to='Orders.order', verbose_name='Order')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_product_done', to='Organizations.organization', verbose_name='Organization')),
                ('product', models.ManyToManyField(related_name='product_product_order', to='Market.Product', verbose_name='Product')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_product_order', to='Organizations.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'ProductOrder',
                'verbose_name_plural': 'ProductOrders',
                'db_table': 'ProductOrder',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated_at')),
                ('data', models.JSONField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Price')),
                ('count', models.IntegerField(default=0, verbose_name='Quantity')),
                ('is_deferred', models.BooleanField(default=False, verbose_name='Deferred')),
                ('cashbox', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cashbox_purchase', to='Market.cashbox', verbose_name='Cashbox')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_purchase', to='Organizations.organization', verbose_name='Organization')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_purchase', to='Market.product', verbose_name='Product')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_purchase', to='Organizations.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'PurchaseRequest',
                'verbose_name_plural': 'PurchaseRequests',
                'db_table': 'PurchaseRequest',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='SaleOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated_at')),
                ('data', models.JSONField(blank=True, null=True)),
                ('cash', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Cash')),
                ('card', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Card')),
                ('bank_transfer', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Bank transfer')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Discount')),
                ('cashbox', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cashbox_sale_order', to='Market.cashbox', verbose_name='Cashbox')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_card_sale_order', to='Clients.clientcard', verbose_name='ClientCard')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_sale_order', to='Organizations.organization', verbose_name='Organization')),
                ('product_order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_sale_order', to='Market.productorder', verbose_name='ProductOrder')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_sale_order', to='Organizations.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'SaleOrder',
                'verbose_name_plural': 'SaleOrders',
                'db_table': 'SaleOrder',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='SaleProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated_at')),
                ('data', models.JSONField(blank=True, null=True)),
                ('cash', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Cash')),
                ('card', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Card')),
                ('bank_transfer', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Bank transfer')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Discount')),
                ('cashbox', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cashbox_sale_product', to='Market.cashbox', verbose_name='Cashbox')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_card_sale_product', to='Clients.clientcard', verbose_name='ClientCard')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_sale_product', to='Organizations.organization', verbose_name='Organization')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_sale_product', to='Market.product', verbose_name='Product')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_sale_product', to='Organizations.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'SaleProduct',
                'verbose_name_plural': 'SaleProducts',
                'db_table': 'SaleProduct',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkDone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated_at')),
                ('data', models.JSONField(blank=True, null=True)),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=100, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Price')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_work_done', to='Orders.order', verbose_name='Order')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_work_done', to='Organizations.organization', verbose_name='Organization')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_work_done', to='Organizations.service', verbose_name='Service')),
                ('service_price', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_price_work_done', to='Handbook.serviceprice', verbose_name='ServicePrice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_work_done', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'WorkDone',
                'verbose_name_plural': 'WorkDones',
                'db_table': 'WorkDone',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated_at')),
                ('data', models.JSONField(blank=True, null=True)),
                ('cashbox', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cashbox_transaction', to='Market.cashbox', verbose_name='Cashbox')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_transaction', to='Organizations.organization', verbose_name='Organization')),
                ('purchase', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_transaction', to='Market.purchaserequest', verbose_name='Purchase')),
                ('sale_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cashbox_sale', to='Market.saleorder', verbose_name='SaleOrder')),
                ('sale_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cashbox_sale', to='Market.saleproduct', verbose_name='SaleProduct')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'Transaction',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseAccept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated_at')),
                ('data', models.JSONField(blank=True, null=True)),
                ('is_cash', models.BooleanField(default=False)),
                ('accept', models.BooleanField(default=False)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_purchase_accept', to='Organizations.organization', verbose_name='Organization')),
                ('purchase_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_purchase_accept', to='Market.purchaserequest', verbose_name='PurchaseRequest')),
            ],
            options={
                'verbose_name': 'PurchaseAccept',
                'verbose_name_plural': 'PurchaseAccepts',
                'db_table': 'PurchaseAccept',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category_product', to='Market.productcategory', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_product', to='Organizations.organization', verbose_name='Organization'),
        ),
        migrations.AddField(
            model_name='product',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_product', to='Organizations.service', verbose_name='Service'),
        ),
    ]
